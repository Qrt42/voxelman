<?xml version="1.0" encoding="UTF-8" ?>
<class name="VoxelChunk" inherits="Resource" version="3.2">
	<brief_description>
	</brief_description>
	<description>
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="_add_light" qualifiers="virtual">
			<return type="void">
			</return>
			<argument index="0" name="local_x" type="int">
			</argument>
			<argument index="1" name="local_y" type="int">
			</argument>
			<argument index="2" name="local_z" type="int">
			</argument>
			<argument index="3" name="size" type="int">
			</argument>
			<argument index="4" name="color" type="Color">
			</argument>
			<description>
			</description>
		</method>
		<method name="_create_meshers" qualifiers="virtual">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="_enter_tree" qualifiers="virtual">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="_exit_tree" qualifiers="virtual">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="_physics_process" qualifiers="virtual">
			<return type="void">
			</return>
			<argument index="0" name="delta" type="float">
			</argument>
			<description>
			</description>
		</method>
		<method name="_process" qualifiers="virtual">
			<return type="void">
			</return>
			<argument index="0" name="delta" type="float">
			</argument>
			<description>
			</description>
		</method>
		<method name="_prop_added" qualifiers="virtual">
			<return type="void">
			</return>
			<argument index="0" name="prop" type="VoxelChunkPropData">
			</argument>
			<description>
			</description>
		</method>
		<method name="_setup_channels" qualifiers="virtual">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="_visibility_changed" qualifiers="virtual">
			<return type="void">
			</return>
			<argument index="0" name="visible" type="bool">
			</argument>
			<description>
			</description>
		</method>
		<method name="_world_transform_changed" qualifiers="virtual">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="add_light">
			<return type="void">
			</return>
			<argument index="0" name="local_x" type="int">
			</argument>
			<argument index="1" name="local_y" type="int">
			</argument>
			<argument index="2" name="local_z" type="int">
			</argument>
			<argument index="3" name="size" type="int">
			</argument>
			<argument index="4" name="color" type="Color">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_lights">
			<return type="void">
			</return>
			<argument index="0" name="lights" type="Array">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_lights_into">
			<return type="void">
			</return>
			<argument index="0" name="lights" type="Array">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_mesher">
			<return type="void">
			</return>
			<argument index="0" name="mesher" type="VoxelMesher">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_prop">
			<return type="void">
			</return>
			<argument index="0" name="prop" type="VoxelChunkPropData">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_prop_light">
			<return type="void">
			</return>
			<argument index="0" name="light" type="VoxelLight">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_unique_lights_into">
			<return type="void">
			</return>
			<argument index="0" name="lights" type="Array">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_voxel_light">
			<return type="void">
			</return>
			<argument index="0" name="light" type="VoxelLight">
			</argument>
			<description>
			</description>
		</method>
		<method name="allocate_channel">
			<return type="void">
			</return>
			<argument index="0" name="channel_index" type="int">
			</argument>
			<argument index="1" name="default_value" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="bake_light">
			<return type="void">
			</return>
			<argument index="0" name="light" type="VoxelLight">
			</argument>
			<description>
			</description>
		</method>
		<method name="bake_lights">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="bake_mesh_array_uv" qualifiers="const">
			<return type="Array">
			</return>
			<argument index="0" name="arr" type="Array">
			</argument>
			<argument index="1" name="tex" type="Texture">
			</argument>
			<argument index="2" name="mul_color" type="float" default="0.7">
			</argument>
			<description>
			</description>
		</method>
		<method name="clear_baked_lights">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="clear_props">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="clear_voxel_lights">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="create_meshers">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="create_voxel_light">
			<return type="void">
			</return>
			<argument index="0" name="color" type="Color">
			</argument>
			<argument index="1" name="size" type="int">
			</argument>
			<argument index="2" name="x" type="int">
			</argument>
			<argument index="3" name="y" type="int">
			</argument>
			<argument index="4" name="z" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="dealloc_channel">
			<return type="void">
			</return>
			<argument index="0" name="channel_index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="fill_channel">
			<return type="void">
			</return>
			<argument index="0" name="value" type="int">
			</argument>
			<argument index="1" name="channel_index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="free_spawn_props">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="get_channel_array" qualifiers="const">
			<return type="PoolByteArray">
			</return>
			<argument index="0" name="channel_index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_channel_compressed" qualifiers="const">
			<return type="PoolByteArray">
			</return>
			<argument index="0" name="channel_index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_data_index" qualifiers="const">
			<return type="int">
			</return>
			<argument index="0" name="x" type="int">
			</argument>
			<argument index="1" name="y" type="int">
			</argument>
			<argument index="2" name="z" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_data_size" qualifiers="const">
			<return type="int">
			</return>
			<description>
			</description>
		</method>
		<method name="get_index" qualifiers="const">
			<return type="int">
			</return>
			<argument index="0" name="x" type="int">
			</argument>
			<argument index="1" name="y" type="int">
			</argument>
			<argument index="2" name="z" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_lights">
			<return type="Array">
			</return>
			<description>
			</description>
		</method>
		<method name="get_mesher" qualifiers="const">
			<return type="VoxelMesher">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_mesher_count">
			<return type="int">
			</return>
			<description>
			</description>
		</method>
		<method name="get_physics_process" qualifiers="const">
			<return type="bool">
			</return>
			<description>
			</description>
		</method>
		<method name="get_position" qualifiers="const">
			<return type="Vector3">
			</return>
			<description>
			</description>
		</method>
		<method name="get_process" qualifiers="const">
			<return type="bool">
			</return>
			<description>
			</description>
		</method>
		<method name="get_prop">
			<return type="VoxelChunkPropData">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_prop_count">
			<return type="int">
			</return>
			<description>
			</description>
		</method>
		<method name="get_voxel" qualifiers="const">
			<return type="int">
			</return>
			<argument index="0" name="x" type="int">
			</argument>
			<argument index="1" name="y" type="int">
			</argument>
			<argument index="2" name="z" type="int">
			</argument>
			<argument index="3" name="channel_index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="merge_mesh_array" qualifiers="const">
			<return type="Array">
			</return>
			<argument index="0" name="arr" type="Array">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_mesher">
			<return type="void">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_prop">
			<return type="void">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_voxel_light">
			<return type="void">
			</return>
			<argument index="0" name="light" type="VoxelLight">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_channel_array">
			<return type="void">
			</return>
			<argument index="0" name="channel_index" type="int">
			</argument>
			<argument index="1" name="array" type="PoolByteArray">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_channel_compressed">
			<return type="void">
			</return>
			<argument index="0" name="channel_index" type="int">
			</argument>
			<argument index="1" name="array" type="PoolByteArray">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_mesher">
			<return type="void">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<argument index="1" name="mesher" type="VoxelMesher">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_physics_process">
			<return type="void">
			</return>
			<argument index="0" name="value" type="bool">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_position">
			<return type="void">
			</return>
			<argument index="0" name="x" type="int">
			</argument>
			<argument index="1" name="y" type="int">
			</argument>
			<argument index="2" name="z" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_process">
			<return type="void">
			</return>
			<argument index="0" name="value" type="bool">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_size">
			<return type="void">
			</return>
			<argument index="0" name="size_x" type="int">
			</argument>
			<argument index="1" name="size_y" type="int">
			</argument>
			<argument index="2" name="size_z" type="int">
			</argument>
			<argument index="3" name="margin_start" type="int" default="0">
			</argument>
			<argument index="4" name="margin_end" type="int" default="0">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_voxel">
			<return type="void">
			</return>
			<argument index="0" name="value" type="int">
			</argument>
			<argument index="1" name="x" type="int">
			</argument>
			<argument index="2" name="y" type="int">
			</argument>
			<argument index="3" name="z" type="int">
			</argument>
			<argument index="4" name="channel_index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="setup_channels">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="validate_channel_data_position" qualifiers="const">
			<return type="bool">
			</return>
			<argument index="0" name="x" type="int">
			</argument>
			<argument index="1" name="y" type="int">
			</argument>
			<argument index="2" name="z" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="visibility_changed">
			<return type="void">
			</return>
			<argument index="0" name="visible" type="bool">
			</argument>
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="channel_count" type="int" setter="set_channel_count" getter="get_channel_count" default="0">
		</member>
		<member name="data_size_x" type="int" setter="set_data_size_x" getter="get_data_size_x" default="0">
		</member>
		<member name="data_size_y" type="int" setter="set_data_size_y" getter="get_data_size_y" default="0">
		</member>
		<member name="data_size_z" type="int" setter="set_data_size_z" getter="get_data_size_z" default="0">
		</member>
		<member name="dirty" type="bool" setter="set_dirty" getter="get_dirty" default="false">
		</member>
		<member name="is_generating" type="bool" setter="set_is_generating" getter="get_is_generating" default="false">
		</member>
		<member name="library" type="VoxelmanLibrary" setter="set_library" getter="get_library">
		</member>
		<member name="margin_end" type="int" setter="set_margin_end" getter="get_margin_end" default="0">
		</member>
		<member name="margin_start" type="int" setter="set_margin_start" getter="get_margin_start" default="0">
		</member>
		<member name="position_x" type="int" setter="set_position_x" getter="get_position_x" default="0">
		</member>
		<member name="position_y" type="int" setter="set_position_y" getter="get_position_y" default="0">
		</member>
		<member name="position_z" type="int" setter="set_position_z" getter="get_position_z" default="0">
		</member>
		<member name="size_x" type="int" setter="set_size_x" getter="get_size_x" default="0">
		</member>
		<member name="size_y" type="int" setter="set_size_y" getter="get_size_y" default="0">
		</member>
		<member name="size_z" type="int" setter="set_size_z" getter="get_size_z" default="0">
		</member>
		<member name="state" type="int" setter="set_state" getter="get_state" default="0">
		</member>
		<member name="transform" type="Transform" setter="set_transform" getter="get_transform" default="Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 )">
		</member>
		<member name="visible" type="bool" setter="set_visible" getter="get_visible" default="true">
		</member>
		<member name="voxel_scale" type="float" setter="set_voxel_scale" getter="get_voxel_scale" default="1.0">
		</member>
		<member name="voxel_world" type="VoxelWorld" setter="set_voxel_world" getter="get_voxel_world">
		</member>
	</members>
	<signals>
		<signal name="mesh_generation_finished">
			<argument index="0" name="chunk" type="VoxelChunk">
			</argument>
			<description>
			</description>
		</signal>
	</signals>
	<constants>
	</constants>
</class>
